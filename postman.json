{
	"info": {
		"_postman_id": "1d44760a-5be8-4db3-bc0d-1e40f0d5563b",
		"name": "6thtouch server",
		"description": "## 6thtouch App backend server API requests endpoints and documentation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"try {\r",
									"    const { token } = pm.response.json()\r",
									"    pm.collectionVariables.set(\"token\", token)\r",
									"} catch (error) {\r",
									"    console.log(error)\r",
									"    pm.collectionVariables.set(\"token\", null)\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\" : \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server_url}}/auth/login",
							"host": [
								"{{server_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Use this endpoint to login a user\n\nThis endpoint will return an object that contains the authentication token.\n```json\n{\n   \"token\": \"jwt token\"\n}\n```\nThis token will be needed to authorize a user, and it needs to be passed through the request headers\n```javascript\nconst myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", `Bearer ${jwt token}`)\n\nfetch(\"url\", {\nheaders: myHeaders\n//.....\n})\n```\n\nThis is the expected request body:"
					},
					"response": []
				},
				{
					"name": "Signup",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let body = JSON.parse(pm.request.body.raw)\r",
									"let {email, password} = body\r",
									"\r",
									"console.log(email, password)\r",
									"pm.collectionVariables.set(\"email\", email);\r",
									"pm.collectionVariables.set(\"password\", password);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Idowu\",\r\n    \"lastname\": \"Farouk\",\r\n    \"email\" : \"faroukidowu9@gmail.com\",\r\n    \"password\": \"faroukidowo9\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server_url}}/auth/signup",
							"host": [
								"{{server_url}}"
							],
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "This endpoint is used to create an account.\n\nThe user account email must be verified from the frontend, this is because no verification was performed on the backend.\n\nThe API will throw an error if the user email is already been used.\n\nThis is the expected request body:"
					},
					"response": []
				}
			],
			"description": "This folder contain's all endpoint that deals with authentication which includes the `signup` and `login` endpoint.",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "User profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server_url}}/user/me/",
							"host": [
								"{{server_url}}"
							],
							"path": [
								"user",
								"me",
								""
							]
						},
						"description": "Use this endpoint to get the current logged in user account"
					},
					"response": []
				},
				{
					"name": "User profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"token\", null)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{server_url}}/user/me/",
							"host": [
								"{{server_url}}"
							],
							"path": [
								"user",
								"me",
								""
							]
						},
						"description": "Use this endpoint to delete the current logged in user account"
					},
					"response": []
				},
				{
					"name": "User Profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let body = JSON.parse(pm.request.body.raw)\r",
									"let {email, password} = body\r",
									"\r",
									"console.log(email, password)\r",
									"pm.collectionVariables.set(\"email\", email);\r",
									"pm.collectionVariables.set(\"password\", password);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Idowuwu\",\r\n    \"lastname\": \"Farouk\",\r\n    \"email\" : \"faroukidowu9@gml.com\",\r\n    \"password\": \"faroukidowo9\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server_url}}/user/me/",
							"host": [
								"{{server_url}}"
							],
							"path": [
								"user",
								"me",
								""
							]
						},
						"description": "Use this endpoint to update the user account"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "server_url",
			"value": "http://localhost:3400",
			"type": "default"
		},
		{
			"key": "token",
			"value": "your jwt token",
			"type": "default"
		},
		{
			"key": "email",
			"value": "",
			"type": "default"
		},
		{
			"key": "password",
			"value": "",
			"type": "default"
		}
	]
}